<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>gov.uspto.pe2e.est</groupId>
    <artifactId>banana</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>PE2E - EST - Banana</name>
    <distributionManagement>
        <repository>
            <id>releases</id>
            <url>https://cicm-nexus-1.uspto.gov/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>https://cicm-nexus-1.uspto.gov/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <build>
        <finalName>banana</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webXml>WEB-INF\web.xml</webXml>
                    <webResources>
                        <resource>
                            <directory>${project.basedir}</directory>
                            <!--<targetPath>/</targetPath>-->
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <!-- Places the git version in a file for later reference
                 https://github.com/ktoso/maven-git-commit-id-plugin/ -->
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.10</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                    <useNativeGit>false</useNativeGit>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <!-- ALTERNATE SETUP - GENERATE FILE -->
                    <!--
                        If you want to keep git information, even in your WAR file etc,
                        use this mode, which will generate a properties file (with filled out values)
                        which you can then normally read using new Properties().load(/**/)
                    -->

                    <skipPoms>true</skipPoms>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>src/main/resources/version.properties</generateGitPropertiesFilename>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <abbrevLength>40</abbrevLength>
                    <skip>false</skip>
                    <excludeProperties>
                        <!-- <excludeProperty>git.user.*</excludeProperty> -->
                    </excludeProperties>
                    <!--
                         read up about git-describe on the in man, or it's homepage - it's a really powerful versioning helper
                         and the recommended way to use git-commit-id-plugin. The configuration bellow is optional,
                         by default describe will run "just like git-describe on the command line", even though it's a JGit reimplementation.
                    -->
                    <gitDescribe>

                        <!-- don't generate the describe property -->
                        <skip>false</skip>

                        <!--
                             if no tag was found "near" this commit, just print the commit's id instead,
                             helpful when you always expect this field to be not-empty
                        -->
                        <always>false</always>
                        <!--
                            how many chars should be displayed as the commit object id?
                            7 is git's default,
                            0 has a special meaning (see end of this README.md),
                            and 40 is the maximum value here
                        -->
                        <abbrev>7</abbrev>

                        <!-- when the build is triggered while the repo is in "dirty state", append this suffix -->
                        <dirty>-dirty</dirty>

                        <!--
                             always print using the "tag-commits_from_tag-g_commit_id-maybe_dirty" format, even if "on" a tag.
                             The distance will always be 0 if you're "on" the tag.
                        -->
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                </configuration>

            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>local-deploy</id>
            <activation>
                <property>
                    <name>deploy</name>
                    <value>local</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <configuration>
                                    <tasks>
                                        <ant antfile="${basedir}/build.xml">
                                            <target name="copyToSolr"/>
                                        </ant>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
